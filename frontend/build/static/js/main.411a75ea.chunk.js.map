{"version":3,"sources":["imgs/thiago.png","imgs/marinho.png","components/PagesMenu.js","pages/Home.js","components/Menu.js","pages/Sobre.js","pages/NDC/Ndc.js","pages/Retas/Dda.js","pages/Retas/PontoM.js","pages/Circulos/Explicita.js","pages/Circulos/Trigonometria.js","pages/Circulos/CPontoM.js","pages/Elipses/EPontoM.js","index.js"],"names":["module","exports","__webpack_require__","p","HOME","key","title","ALUNOS","NDC","Home","React","createElement","className","Link","to","Pages","require","Menu","_useState","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","Object","values","map","page","concat","onClick","handlePageChange","Sobre","src","imagem1","alt","imagem2","yMax","y","yMin","xMax","x","xMin","min","max","formData","setFormData","_useState3","_useState4","data","setData","canvasRef","useRef","handleChange","e","_e$target","target","name","value","prevState","_objectSpread","_defineProperty","useEffect","canvas","current","context","getContext","clearRect","width","height","length","_data$","dcX","dcY","fillRect","onSubmit","preventDefault","arrayData","parseFloat","parseInt","axios","post","then","response","catch","error","console","fetchData","type","onChange","ref","DDA","valuex1","valuey1","valuex2","valuey2","lines","setLines","windowWidth","window","innerWidth","windowHeight","innerHeight","canvasCenterX","canvasCenterY","forEach","line","pontox","pontoy","canvasX","canvasY","PontoM","Explicita","raio","valuex","valuey","centerX","centerY","_ref","_ref2","translatedX","translatedY","beginPath","arc","Math","PI","fill","closePath","drawCircle","xOrigem","yOrigem","CPontoM","EPontoM","centerPos","minorRadioSize","ElipseCenter","MinorRadius","router","createBrowserRouter","path","element","RDda","RPontoM","CExplicita","CTrigonometrica","ReactDOM","createRoot","document","getElementById","render","StrictMode","RouterProvider"],"mappings":"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","file":"static/js/main.411a75ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/thiago.1209fd49.png\";","module.exports = __webpack_public_path__ + \"static/media/marinho.3d57d40f.png\";","const Pages = {\n    HOME: { key: '', title: 'Home' },\n    ALUNOS: { key: 'sobre', title: 'Alunos' },\n    NDC: { key: 'ndc/ndc', title: 'NDC' }, \n    \n    // DDA: { key: 'dda', title: 'DDA' },\n    // PONTOM: { key: 'pontom', title: 'Ponto Médio' },\n    // RETAS_DDA: { key: 'retas-dda', title: 'DDA' },\n    // RETAS_PONTOM: { key: 'retas-pontom', title: 'Ponto Médio' },\n    // CIRCULOS_EXPLICITA: { key: 'circulos-explicita', title: 'Círculo Explícita' },\n    // CIRCULOS_TRIGONOMETRICA: { key: 'circulos-trigonometrica', title: 'Círculo Trigonométrico' },\n    // CIRCULOS_CPONTOM: { key: 'circulos-cpontom', title: 'Círculo Ponto Médio' },\n    // ELIPSES_EPONTOM: { key: 'elipses-epontom', title: 'Elipse Ponto Médio' },\n    // Adicione mais páginas conforme necessário\n};\n\nmodule.exports = Pages;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/Home.css';\n\nconst Home = () => {\n  return (\n    <div className=\"home-container\">\n      <h1>Bem-vindo ao Nosso Projeto</h1>\n      <h3>Desenvolvido por:</h3>\n      <h3>Thiago Felipe, João Victor Marinho, Luana Vidal, Henrique</h3>\n      <Link to=\"/Sobre\" className=\"btn\">\n        Ir para a Apresentação\n      </Link>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/Menu.css';\n\nconst Pages = require('./PagesMenu');\n\nconst Menu = () => {\n  const [currentPage, setCurrentPage] = useState(Pages.HOME.key);\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <nav className=\"menu\">\n    <ul>\n      {Object.values(Pages).map((page) => (\n        <li key={page.key} className={currentPage === page.key ? 'active' : ''}>\n          <Link to={`/${page.key}`} onClick={() => handlePageChange(page.key)}>\n            {page.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </nav>\n\n  );\n}\n\nexport default Menu;\n","import React from 'react';\nimport imagem1 from '../imgs/thiago.png';\nimport imagem2 from '../imgs/marinho.png';\nimport '../styles/Sobre.css';\nimport Menu from '../components/Menu';\n\nconst Sobre = () => {\n  return (\n    <div>\n      <Menu />\n      <div className=\"sobre-container\">\n        <div className=\"card\">\n          <img src={imagem1} alt=\"Perfil 1\" />\n          <div className=\"card-content\">\n            <h2>Thiago Felipe Viana Diniz</h2>\n            <p>Aluno de Computação na UEPB no Sexto período. Atualmente estagiário de QA na Orbit Tech.</p>\n          </div>\n        </div>\n        <div className=\"card\">\n          <img src={imagem2} alt=\"Perfil 2\" />\n          <div className=\"card-content\">\n            <h2>João Victor Marinho Souza</h2>\n            <p>Aluno de Computação na UEPB no Sexto período. Atualmente estagiário de QA na Orbit Tech.</p>\n          </div>\n        </div>\n       \n      </div>\n    </div>\n  );\n}\n\nexport default Sobre;\n","import React, { useState, useEffect, useRef } from 'react';\nimport Menu from '../../components/Menu';\nimport '../../styles/Retas.css';\nimport axios from 'axios';\n\nfunction NDC() {\n\n    const porta = '9090';\n    const rota = 'ndc';\n\n    const [formData, setFormData] = useState({\n        yMax: '20.3', y: '15.5', yMin: '10.3',\n        xMax: '20.3', x: '15.5', xMin: '10.3',\n        min: '0', max: '1'\n    });\n    const [data, setData] = useState([]);\n    const canvasRef = useRef(null);\n\n    const fetchData = () => {\n      const arrayData = [\n        {   \n            yMax: parseFloat(formData.yMax), y: parseFloat(formData.y), yMin: parseFloat(formData.yMin),\n            xMax: parseFloat(formData.xMax), x: parseFloat(formData.x), xMin: parseFloat(formData.xMin),\n            min: parseInt(formData.min), max: parseInt(formData.max)  \n        },\n      ];\n      axios\n        .post(`http://localhost:${porta}/figura/${rota}`, arrayData)\n        .then(response => {\n          setData(response.data);\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    };\n\n    const handleChange = e => {\n      const { name, value } = e.target;\n      setFormData(prevState => ({\n        ...prevState,\n        [name]: value\n      }));\n    };\n\n    const handleSubmit = e => {\n      e.preventDefault();\n      setData([]); // Limpar as circulo anterior\n      fetchData();\n    };\n\n    useEffect(() => {\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n      \n      // Função para desenhar o pixel no canvas\n      const drawPixel = (x, y) => {\n        context.fillRect(x, y, 10, 10);\n      };\n    \n      // Limpar o canvas\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      \n      // Verificar se há um único pixel para desenhar\n      if (data.length === 1) {\n        const { dcX, dcY } = data[0];\n        drawPixel(dcX, dcY);\n      }\n    }, [data]);\n    \n    return (\n      <div>\n        <Menu />\n        <h1 className='title'>NDC</h1>\n\n        <form onSubmit={handleSubmit} className=\"input-card\">\n          <h2>Valores</h2>\n          <div className=\"input-row\">\n              <div className=\"input-group\">\n                  <label>Valor X:</label>\n                  <input type=\"number\" name=\"x\" value={formData.x} onChange={handleChange} />\n              </div>\n              <div className=\"input-group\">\n                  <label>Valor X Maximo:</label>\n                  <input type=\"number\" name=\"xMax\" value={formData.xMax} onChange={handleChange} />\n              </div>\n              <div className=\"input-group\">\n                  <label>Valor X Minimo:</label>\n                  <input type=\"number\" name=\"xMin\" value={formData.xMin} onChange={handleChange} />\n              </div>\n              <div className=\"input-group\">\n                  <label>Valor Y:</label>\n                  <input type=\"number\" name=\"y\" value={formData.y} onChange={handleChange} />\n              </div>\n              <div className=\"input-group\">\n                  <label>Valor Y Maximo:</label>\n                  <input type=\"number\" name=\"yMax\" value={formData.yMax} onChange={handleChange} />\n              </div>\n              <div className=\"input-group\">\n                  <label>Valor Y Minimo:</label>\n                  <input type=\"number\" name=\"yMin\" value={formData.yMin} onChange={handleChange} />\n              </div>\n              <div className=\"input-group\">\n                <label>Valor Mínimo:</label>\n                <select name=\"min\" value={formData.min} onChange={handleChange}>\n                  <option value=\"-1\">-1</option>\n                  <option value=\"0\">0</option>\n                </select>\n              </div>\n              <div className=\"input-group\">\n                <label>Valor Máximo:</label>\n                <select name=\"max\" value={formData.max} onChange={handleChange}>\n                  <option value=\"1\">1</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"button-container\">\n              <button type=\"submit\">Ativar Pixel</button>\n            </div>\n          </form>\n\n        <div className=\"canvas-container\">\n          <canvas ref={canvasRef} width={1000} height={1000} />\n        </div>\n      </div>\n    );\n}\n\nexport default NDC;\n","import React, { useState, useEffect, useRef } from 'react';\nimport Menu from '../../components/Menu';\nimport '../../styles/Retas.css'; // Importe o arquivo CSS para estilização\nimport axios from 'axios';\n\nfunction DDA() {\n\n  const porta = '9090';\n  const rota = 'reta/dda';\n\n  const [formData, setFormData] = useState({\n    valuex1: '',\n    valuey1: '',\n    valuex2: '',\n    valuey2: ''\n  });\n  const [lines, setLines] = useState([]);\n\n  const fetchData = () => {\n    const arrayData = [\n      { pontox: parseInt(formData.valuex1), pontoy: parseInt(formData.valuey1) },\n      { pontox: parseInt(formData.valuex2), pontoy: parseInt(formData.valuey2) }\n    ];\n\n    axios\n      .post(`http://localhost:${porta}/figura/${rota}`, arrayData)\n      .then(response => {\n        setLines(response.data);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setLines([]); // Limpar as retas anteriores\n    fetchData();\n  };\n\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n  \n    // Obter as dimensões da janela\n    const windowWidth = window.innerWidth;\n    const windowHeight = window.innerHeight;\n  \n    // Definir o ponto médio da janela\n    const centerX = windowWidth / 2;\n    const centerY = windowHeight / 2;\n  \n    // Definir as coordenadas do ponto médio no canvas\n    const canvasCenterX = centerX;\n    const canvasCenterY = centerY;\n  \n    // Definir o tamanho do canvas\n    canvas.width = windowWidth;\n    canvas.height = windowHeight;\n  \n    // Desenhar as retas\n    lines.forEach(line => {\n      const { pontox, pontoy } = line;\n  \n      // Calcular as coordenadas no canvas\n      const canvasX = canvasCenterX + pontox;\n      const canvasY = canvasCenterY - pontoy;\n  \n      context.fillRect(canvasX, canvasY, 1, 1);\n    });\n  }, [lines]);\n\n  return (\n    <div>\n      <Menu />\n      <h1>Reta DDA</h1>\n\n      <form onSubmit={handleSubmit} className=\"input-card\">\n        <h2>Ponto 1</h2>\n        <div className=\"input-row\">\n          <div className=\"input-group\">\n            <label>Valor x1:</label>\n            <input type=\"number\" name=\"valuex1\" value={formData.valuex1} onChange={handleChange} />\n          </div>\n          <div className=\"input-group\">\n            <label>Valor y1:</label>\n            <input type=\"number\" name=\"valuey1\" value={formData.valuey1} onChange={handleChange} />\n          </div>\n        </div>\n\n        <h2>Ponto 2</h2>\n        <div className=\"input-row\">\n          <div className=\"input-group\">\n            <label>Valor x2:</label>\n            <input type=\"number\" name=\"valuex2\" value={formData.valuex2} onChange={handleChange} />\n          </div>\n          <div className=\"input-group\">\n            <label>Valor y2:</label>\n            <input type=\"number\" name=\"valuey2\" value={formData.valuey2} onChange={handleChange} />\n          </div>\n        </div>\n\n        <div className=\"button-container\">\n          <button type=\"submit\">Desenhar</button>\n        </div>\n      </form>\n\n      <div className=\"canvas-container\">\n        <canvas ref={canvasRef} />\n      </div>\n    </div>\n  );\n}\n\nexport default DDA;\n","import React, { useState, useEffect, useRef } from 'react';\nimport Menu from '../../components/Menu';\nimport '../../styles/Retas.css'; // Importe o arquivo CSS para estilização\nimport axios from 'axios';\n\nfunction PontoM() {\n\n  const porta = '9090';\n  const rota = 'reta/ponto-medio';\n\n  const [formData, setFormData] = useState({\n    valuex1: '',\n    valuey1: '',\n    valuex2: '',\n    valuey2: ''\n  });\n  const [lines, setLines] = useState([]);\n\n  const fetchData = () => {\n    const arrayData = [\n      { pontox: parseInt(formData.valuex1), pontoy: parseInt(formData.valuey1) },\n      { pontox: parseInt(formData.valuex2), pontoy: parseInt(formData.valuey2) }\n    ];\n\n    axios\n      .post(`http://localhost:${porta}/figura/${rota}`, arrayData)\n      .then(response => {\n        setLines(response.data);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setLines([]); // Limpar as retas anteriores\n    fetchData();\n  };\n\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n  \n    // Obter as dimensões da janela\n    const windowWidth = window.innerWidth;\n    const windowHeight = window.innerHeight;\n  \n    // Definir o ponto médio da janela\n    const centerX = windowWidth / 2;\n    const centerY = windowHeight / 2;\n  \n    // Definir as coordenadas do ponto médio no canvas\n    const canvasCenterX = centerX;\n    const canvasCenterY = centerY;\n  \n    // Definir o tamanho do canvas\n    canvas.width = windowWidth;\n    canvas.height = windowHeight;\n  \n    // Desenhar as retas\n    lines.forEach(line => {\n      const { pontox, pontoy } = line;\n  \n      // Calcular as coordenadas no canvas\n      const canvasX = canvasCenterX + pontox;\n      const canvasY = canvasCenterY - pontoy;\n  \n      context.fillRect(canvasX, canvasY, 1, 1);\n    });\n  }, [lines]);\n  \n\n  return (\n    <div>\n      <Menu />\n      <h1>Reta Ponto Médio</h1>\n\n      <form onSubmit={handleSubmit} className=\"input-card\">\n        <h2>Ponto 1</h2>\n        <div className=\"input-row\">\n          <div className=\"input-group\">\n            <label>Valor x1:</label>\n            <input type=\"number\" name=\"valuex1\" value={formData.valuex1} onChange={handleChange} />\n          </div>\n          <div className=\"input-group\">\n            <label>Valor y1:</label>\n            <input type=\"number\" name=\"valuey1\" value={formData.valuey1} onChange={handleChange} />\n          </div>\n        </div>\n\n        <h2>Ponto 2</h2>\n        <div className=\"input-row\">\n          <div className=\"input-group\">\n            <label>Valor x2:</label>\n            <input type=\"number\" name=\"valuex2\" value={formData.valuex2} onChange={handleChange} />\n          </div>\n          <div className=\"input-group\">\n            <label>Valor y2:</label>\n            <input type=\"number\" name=\"valuey2\" value={formData.valuey2} onChange={handleChange} />\n          </div>\n        </div>\n\n        <div className=\"button-container\">\n          <button type=\"submit\">Desenhar</button>\n        </div>\n      </form>\n\n      <div className=\"canvas-container\">\n        <canvas ref={canvasRef} width={500} height={500} />\n      </div>\n    </div>\n  );\n}\n\nexport default PontoM;\n","import React, { useState, useEffect, useRef } from 'react';\nimport Menu from '../../components/Menu';\nimport '../../styles/Retas.css'; // Importe o arquivo CSS para estilização\nimport axios from 'axios';\n\nfunction Explicita() {\n  const porta = '9090';\n  const rota = 'circulo/equacao-explicita';\n\n  const [formData, setFormData] = useState({\n    raio: '',\n    valuex: '',\n    valuey: '',\n  });\n  const [data, setData] = useState([]);\n  const canvasRef = useRef(null);\n\n  const fetchData = () => {\n    //req should be -> [{\"raio\": \"r\", \"xOrigem\": \"xOrigem\", \"yOrigem\":\"yOrigem\"}]\n    const arrayData = [\n      {\n        raio: parseInt(formData.raio),\n        xOrigem: parseInt(formData.valuex),\n        yOrigem: parseInt(formData.valuey),\n      },\n    ];\n    axios\n      .post(`http://localhost:${porta}/figura/${rota}`, arrayData)\n      .then((response) => {\n        setData(response.data);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setData([]); // Limpar o círculo anterior\n    fetchData();\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    // Função para desenhar o círculo no canvas\n    const drawCircle = () => {\n      // Limpar o canvas\n      context.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Definir as coordenadas do centro do plano\n      const centerX = canvas.width / 2;\n      const centerY = canvas.height / 2;\n\n      // Desenhar o círculo\n      data.forEach(([pontox, pontoy]) => {\n        const translatedX = centerX + pontox;\n        const translatedY = centerY - pontoy; // Inverter o eixo Y\n        context.beginPath();\n        context.arc(translatedX, translatedY, 1, 0, 2 * Math.PI);\n        context.fill();\n        context.closePath();\n      });\n    };\n\n    // Chamar a função de desenho após a atualização do estado data\n    drawCircle();\n  }, [data]);\n\n  return (\n    <div>\n      <Menu />\n      <h1>Círculo Explicita</h1>\n\n      <form onSubmit={handleSubmit} className=\"input-card\">\n        <h2>Ponto X e Y</h2>\n        <div className=\"input-row\">\n          <div className=\"input-group\">\n            <label>Valor X:</label>\n            <input type=\"number\" name=\"valuex\" value={formData.valuex} onChange={handleChange} />\n          </div>\n          <div className=\"input-group\">\n            <label>Valor Y:</label>\n            <input type=\"number\" name=\"valuey\" value={formData.valuey} onChange={handleChange} />\n          </div>\n          <div className=\"input-group\">\n            <label>Valor Raio:</label>\n            <input type=\"number\" name=\"raio\" value={formData.raio} onChange={handleChange} />\n          </div>\n        </div>\n        <div className=\"button-container\">\n          <button type=\"submit\">Desenhar</button>\n        </div>\n      </form>\n\n      <div className=\"canvas-container\">\n        <canvas ref={canvasRef} width={500} height={500} />\n      </div>\n    </div>\n  );\n}\n\nexport default Explicita;\n","import React, { useState, useEffect, useRef } from 'react';\nimport Menu from '../../components/Menu';\nimport '../../styles/Retas.css'; // Importe o arquivo CSS para estilização\nimport axios from 'axios';\n\nfunction CPontoM() {\n\n    const porta = '9090';\n    const rota = 'circulo/trigonometria';\n\n    const [formData, setFormData] = useState({\n      raio: '',\n      valuex: '',\n      valuey: ''\n    });\n    const [data, setData] = useState([]);\n    const canvasRef = useRef(null);\n\n    const fetchData = () => {\n      //req should be -> [{\"raio\": \"r\", \"xOrigem\": \"xOrigem\", \"yOrigem\":\"yOrigem\"}]\n      const arrayData = [\n        {raio: parseInt(formData.raio), xOrigem: parseInt(formData.valuex), yOrigem: parseInt(formData.valuey) },\n      ];\n      axios\n        .post(`http://localhost:${porta}/figura/${rota}`, arrayData)\n        .then(response => {\n          setData(response.data);\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    };\n\n    const handleChange = e => {\n      const { name, value } = e.target;\n      setFormData(prevState => ({\n        ...prevState,\n        [name]: value\n      }));\n    };\n\n    const handleSubmit = e => {\n      e.preventDefault();\n      setData([]); // Limpar as circulo anterior\n      fetchData();\n    };\n\n    useEffect(() => {\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n    \n    // Função para desenhar o circulo no canvas\n    const drawCircle = () => {\n      // Limpar o canvas\n      context.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Desenhar o círculo\n      data.forEach(([pontox, pontoy]) => {\n        context.beginPath();\n        context.arc(pontox, pontoy, 1, 0, 2 * Math.PI);\n        context.fill();\n        context.closePath();\n      });\n    };\n      // Chamar a função de desenho após a atualização do estado data\n      drawCircle();\n      // Chamar a função de desenho após a atualização do estado data\n      drawCircle();\n    }, [data]);\n\n    return (\n      <div>\n        <Menu />\n        <h1>Circulo Trigonometrico</h1>\n\n        <form onSubmit={handleSubmit} className=\"input-card\">\n          <h2>Ponto X e Y</h2>\n          <div className=\"input-row\">\n              <div className=\"input-group\">\n                  <label>Valor X:</label>\n                  <input type=\"number\" name=\"valuex\" value={formData.valuex} onChange={handleChange} />\n              </div>\n              <div className=\"input-group\">\n                  <label>Valor Y:</label>\n                  <input type=\"number\" name=\"valuey\" value={formData.valuey} onChange={handleChange} />\n              </div>\n              <div className=\"input-group\">\n                  <label>Valor Raio:</label>\n                  <input type=\"number\" name=\"raio\" value={formData.raio} onChange={handleChange} />\n              </div>\n\n          </div>\n          <div className=\"button-container\">\n                  <button type=\"submit\">Desenhar</button>\n              </div>\n        </form>\n\n        <div className=\"canvas-container\">\n          <canvas ref={canvasRef} width={500} height={500} />\n        </div>\n      </div>\n    );\n}\n\nexport default CPontoM;\n","import React, { useState, useEffect, useRef } from 'react';\nimport Menu from '../../components/Menu';\nimport '../../styles/Retas.css'; // Importe o arquivo CSS para estilização\nimport axios from 'axios';\n\nfunction CPontoM() {\n\n    const porta = '9090';\n    const rota = 'circulo/ponto-medio';\n\n    const [formData, setFormData] = useState({\n      raio: '',\n      valuex: '',\n      valuey: ''\n    });\n    const [data, setData] = useState([]);\n    const canvasRef = useRef(null);\n\n    const fetchData = () => {\n      //req should be -> [{\"raio\": \"r\", \"xOrigem\": \"xOrigem\", \"yOrigem\":\"yOrigem\"}]\n      const arrayData = [\n        {raio: parseInt(formData.raio), xOrigem: parseInt(formData.valuex), yOrigem: parseInt(formData.valuey) },\n      ];\n      axios\n        .post(`http://localhost:${porta}/figura/${rota}`, arrayData)\n        .then(response => {\n          setData(response.data);\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    };\n\n    const handleChange = e => {\n      const { name, value } = e.target;\n      setFormData(prevState => ({\n        ...prevState,\n        [name]: value\n      }));\n    };\n\n    const handleSubmit = e => {\n      e.preventDefault();\n      setData([]); // Limpar as circulo anterior\n      fetchData();\n    };\n\n    useEffect(() => {\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n    \n    // Função para desenhar o circulo no canvas\n    const drawCircle = () => {\n      // Limpar o canvas\n      context.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Desenhar o círculo\n      data.forEach(([pontox, pontoy]) => {\n        context.beginPath();\n        context.arc(pontox, pontoy, 1, 0, 2 * Math.PI);\n        context.fill();\n        context.closePath();\n      });\n    };\n      // Chamar a função de desenho após a atualização do estado data\n      drawCircle();\n      // Chamar a função de desenho após a atualização do estado data\n      drawCircle();\n    }, [data]);\n\n    return (\n      <div>\n        <Menu />\n        <h1>Circulo Ponto Medio</h1>\n\n        <form onSubmit={handleSubmit} className=\"input-card\">\n          <h2>Ponto X e Y</h2>\n          <div className=\"input-row\">\n              <div className=\"input-group\">\n                  <label>Valor X:</label>\n                  <input type=\"number\" name=\"valuex\" value={formData.valuex} onChange={handleChange} />\n              </div>\n              <div className=\"input-group\">\n                  <label>Valor Y:</label>\n                  <input type=\"number\" name=\"valuey\" value={formData.valuey} onChange={handleChange} />\n              </div>\n              <div className=\"input-group\">\n                  <label>Valor Raio:</label>\n                  <input type=\"number\" name=\"raio\" value={formData.raio} onChange={handleChange} />\n              </div>\n\n          </div>\n          <div className=\"button-container\">\n                  <button type=\"submit\">Desenhar</button>\n              </div>\n        </form>\n\n        <div className=\"canvas-container\">\n          <canvas ref={canvasRef} width={500} height={500} />\n        </div>\n      </div>\n    );\n}\n\nexport default CPontoM;\n","import React, { useState, useEffect, useRef } from 'react';\nimport Menu from '../../components/Menu';\nimport '../../styles/Retas.css'; // Importe o arquivo CSS para estilização\nimport axios from 'axios';\n\nfunction EPontoM() {\n\n    const porta = '9090';\n    const rota = 'elipse/ponto-medio';\n\n    const [formData, setFormData] = useState({\n      centerPos: '',\n      minorRadioSize: '',\n    });\n    const [data, setData] = useState([]);\n    const canvasRef = useRef(null);\n\n    const fetchData = () => {\n      //req should be -> [{\"ElipseCenter\": \"centerPos\", \"MinorRadius\": \"minorRadioSize\"}]\n      const arrayData = [\n        {ElipseCenter: parseInt(formData.centerPos), MinorRadius: parseInt(formData.minorRadioSize) },\n      ];\n      axios\n        .post(`http://localhost:${porta}/figura/${rota}`, arrayData)\n        .then(response => {\n          setData(response.data);\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    };\n\n    const handleChange = e => {\n      const { name, value } = e.target;\n      setFormData(prevState => ({\n        ...prevState,\n        [name]: value\n      }));\n    };\n\n    const handleSubmit = e => {\n      e.preventDefault();\n      setData([]); // Limpar as circulo anterior\n      fetchData();\n    };\n\n    useEffect(() => {\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n    \n    // Função para desenhar o circulo no canvas\n    const drawElipse = () => {\n      // Limpar o canvas\n      context.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Desenhar o círculo\n      data.forEach(([pontox, pontoy]) => {\n        context.beginPath();\n        context.arc(pontox, pontoy, 1, 0, 2 * Math.PI);\n        context.fill();\n        context.closePath();\n      });\n    };\n      // Chamar a função de desenho após a atualização do estado data\n      drawElipse();\n    }, [data]);\n\n    return (\n      <div>\n        <Menu />\n        <h1>Elipse Ponto Medio</h1>\n\n        <form onSubmit={handleSubmit} className=\"input-card\">\n          <h2>Ponto X e Y</h2>\n          <div className=\"input-row\">\n              <div className=\"input-group\">\n                  <label>Valor CenterPosition:</label>\n                  <input type=\"number\" name=\"centerPos\" value={formData.centerPos} onChange={handleChange} />\n              </div>\n              <div className=\"input-group\">\n                  <label>Valor Minor Radio Size:</label>\n                  <input type=\"number\" name=\"minorRadioSize\" value={formData.minorRadioSize} onChange={handleChange} />\n              </div>\n          </div>\n          <div className=\"button-container\">\n                  <button type=\"submit\">Desenhar</button>\n              </div>\n        </form>\n\n        <div className=\"canvas-container\">\n          <canvas ref={canvasRef} width={500} height={500} />\n        </div>\n      </div>\n    );\n}\n\nexport default EPontoM;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport Home from './pages/Home';\nimport Sobre from './pages/Sobre';\n\n//NDC\nimport NDC from './pages/NDC/Ndc';\n// Retas\nimport RDda from './pages/Retas/Dda';\nimport RPontoM from './pages/Retas/PontoM';\n//Circulos\nimport CExplicita from './pages/Circulos/Explicita';\nimport CTrigonometrica from './pages/Circulos/Trigonometria';\nimport CPontoM from './pages/Circulos/CPontoM';\n//Elipses\nimport EPontoM from './pages/Elipses/EPontoM';\n\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\n\nconst router = createBrowserRouter([\n  {path:'/', element:<Home/>},\n  {path:'/sobre', element:<Sobre/>},\n  {path:'/ndc/ndc', element:<NDC/>},\n  {path:'/retas/dda', element:<RDda/>},\n  {path:'/retas/pontom', element:<RPontoM/>},\n  {path:'/circulos/explicita', element:<CExplicita/>},\n  {path:'/circulos/trigonometrica', element:<CTrigonometrica/>},\n  {path:'/circulos/cpontom', element:<CPontoM/>},\n  {path:'/elipses/epontom', element:<EPontoM/>},\n])\n\nReactDOM.createRoot(document.getElementById('root')).\nrender(\n  <React.StrictMode>\n    <RouterProvider router = {router}/>\n  </React.StrictMode>,\n);\n"],"sourceRoot":""}